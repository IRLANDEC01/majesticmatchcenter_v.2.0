import { NextRequest, NextResponse } from 'next/server';
import { connectToDatabase } from '@/lib/db';
import mapTemplateService from '@/lib/domain/map-templates/map-template-service';
import { handleApiError } from '@/lib/api/handle-api-error';
import { authorize } from '@/shared/lib/authorize';

/**
 * GET /api/admin/map-templates/{id}
 * üõ°Ô∏è –ó–ê–©–ò–©–ï–ù–û: –¢—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–æ 'manageEntities'
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —à–∞–±–ª–æ–Ω –∫–∞—Ä—Ç—ã –ø–æ ID.
 * @param {Request} request  - –û–±—ä–µ–∫—Ç –∑–∞–ø—Ä–æ—Å–∞ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è).
 * @param {RouteContext} context - –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –º–∞—Ä—à—Ä—É—Ç–∞.
 */
export async function GET(req: NextRequest, { params }: { params: Promise<{ id: string }> }) {
  try {
    // üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    const authResult = await authorize('manageEntities');
    if (!authResult.success) {
      return authResult.response;
    }

    await connectToDatabase();
    
    const { id } = await params;
    const mapTemplate = await mapTemplateService.getMapTemplateById(id);
    return NextResponse.json({ data: mapTemplate });
  } catch (error) {
    return handleApiError(error instanceof Error ? error : new Error(String(error)));
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å —Ñ–∞–π–ª–∞–º–∏ –¥–æ–ª–∂–Ω—ã –∏–¥—Ç–∏ —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ Server Actions
// –≠—Ç–æ –∏—Å–∫–ª—é—á–∞–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∏ –ø—Ä–æ–±–ª–µ–º—ã —Å —Ñ–∞–π–ª–∞–º–∏ 