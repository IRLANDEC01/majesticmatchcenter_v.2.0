'use client';

import React, { useState, useCallback } from 'react';
import { Button } from "@/shared/ui/button";
import { Plus } from "lucide-react";
import { usePermissions } from "@/shared/hooks/use-permissions";
import { useQueryClient } from '@tanstack/react-query';
import {
  MapTemplatesTable, // ‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ infinite scroll —Ç–∞–±–ª–∏—Ü—É
  MapTemplateDialog,
  useInfiniteMapTemplatesQuery, // ‚úÖ –ù–û–í–û–ï: Infinite scroll —Ö—É–∫
  useCreateMapTemplateMutation,
  useUpdateMapTemplateMutation,
  useArchiveMapTemplateMutation,
  useRestoreMapTemplateMutation,
  type MapTemplate,
} from "@/entities/map-templates";
import type { AdminRole, EntityStatus } from "@/shared/types/admin";
import type { MapTemplateFormValues } from '@/lib/api/schemas/map-templates/map-template-schemas';

interface MapTemplatesPageContentProps {
  userRole: AdminRole;
}

export function MapTemplatesPageContent({ userRole }: MapTemplatesPageContentProps) {
  const permissions = usePermissions(userRole);
  const queryClient = useQueryClient();
  
  // ‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ infinite scroll - –ª–æ–∫–∞–ª—å–Ω—ã–π state –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const [searchTerm, setSearchTerm] = useState('');
  const [status, setStatus] = useState<EntityStatus>('active');
  
  // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —è–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö
  const [shouldLoadData, setShouldLoadData] = useState(false);
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
  const [isDialogOpen, setIsDialogOpen] = useState(false);
  const [selectedTemplate, setSelectedTemplate] = useState<MapTemplate | undefined>(undefined);
  
  // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
  const [formErrors, setFormErrors] = useState<Record<string, string>>({});

  // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ —è–≤–Ω–æ–º –¥–µ–π—Å—Ç–≤–∏–∏
  const shouldFetchData = shouldLoadData || 
    searchTerm.trim().length >= 2 || 
    status !== 'active';

  // ‚úÖ –ù–û–í–û–ï: Infinite scroll –¥–∞–Ω–Ω—ã–µ - –ù–ï –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  const {
    templates,
    isLoading,
    isError,
    error,
    hasNextPage,
    isFetchingNextPage,
    loadMore,
    totalCount,
    refetch,
  } = useInfiniteMapTemplatesQuery({
    searchTerm,
    status,
    enabled: shouldFetchData, // ‚úÖ –ö–õ–Æ–ß–ï–í–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: enabled —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —è–≤–Ω–æ
  });

  // ‚úÖ –†–ï–§–ê–ö–¢–û–†–ò–ù–ì: –ò—Å–ø–æ–ª—å–∑—É–µ–º TanStack Query —Ö—É–∫–∏ –≤–º–µ—Å—Ç–æ Server Actions
  const createMutation = useCreateMapTemplateMutation();
  const updateMutation = useUpdateMapTemplateMutation();
  const archiveMutation = useArchiveMapTemplateMutation();
  const restoreMutation = useRestoreMapTemplateMutation();

  // ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  const handleSearchChange = useCallback((value: string) => {
    setSearchTerm(value);
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ–∏—Å–∫ –æ—Ç 2 —Å–∏–º–≤–æ–ª–æ–≤
    if (value.trim().length >= 2) {
      setShouldLoadData(true);
    }
  }, []);

  const handleStatusChange = useCallback((newStatus: EntityStatus) => {
    setStatus(newStatus);
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞ (–∫—Ä–æ–º–µ active)
    if (newStatus !== 'active') {
      setShouldLoadData(true);
    }
  }, []);

  const handleShowAll = useCallback(() => {
    setShouldLoadData(true);
    setSearchTerm('');
    setStatus('active');
  }, []);

  // ‚úÖ –†–ï–§–ê–ö–¢–û–†–ò–ù–ì: –ö–æ–ª–±—ç–∫–∏ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞
  const handleCreateAction = useCallback(async (data: MapTemplateFormValues) => {
    try {
      setFormErrors({}); // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
      console.log('üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:', data); // –û—Ç–ª–∞–¥–∫–∞
      const result = await createMutation.mutateAsync(data);
      console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –º—É—Ç–∞—Ü–∏–∏:', result); // –û—Ç–ª–∞–¥–∫–∞
      if (result.success) {
        setIsDialogOpen(false);
        setFormErrors({}); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
        refetch(); // ‚úÖ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º infinite data
      } else {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        console.log('üö® –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', result.errors); // –û—Ç–ª–∞–¥–∫–∞
        setFormErrors(result.errors || {});
      }
      return result;
    } catch (error) {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏/—Å–µ—Ä–≤–µ—Ä–∞
      console.error('üö® –û—à–∏–±–∫–∞ –≤ handleCreateAction:', error); // –û—Ç–ª–∞–¥–∫–∞
      setFormErrors({ general: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' });
      throw error;
    }
  }, [createMutation, refetch]);

  const handleUpdateAction = useCallback(async (id: string, data: MapTemplateFormValues) => {
    try {
      setFormErrors({}); // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—à–∏–±–∫–∏
      const result = await updateMutation.mutateAsync({ id, data });
      if (result.success) {
        setIsDialogOpen(false);
        setSelectedTemplate(undefined);
        setFormErrors({}); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
        refetch(); // ‚úÖ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º infinite data
      } else {
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        setFormErrors(result.errors || {});
      }
      return result;
    } catch (error) {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ —Å–µ—Ç–∏/—Å–µ—Ä–≤–µ—Ä–∞
      setFormErrors({ general: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞' });
      throw error;
    }
  }, [updateMutation, refetch]);

  const handleArchiveAction = useCallback(async (template: MapTemplate) => {
    await archiveMutation.mutateAsync(template.id);
    // ‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º infinite queries
    queryClient.invalidateQueries({
      predicate: (query) => query.queryKey[0] === 'mapTemplates'
    });
    refetch(); // ‚úÖ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º infinite data
  }, [archiveMutation, queryClient, refetch]);

  const handleRestoreAction = useCallback(async (template: MapTemplate) => {
    await restoreMutation.mutateAsync(template.id);
    // ‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ò–Ω–≤–∞–ª–∏–¥–∏—Ä—É–µ–º infinite queries
    queryClient.invalidateQueries({
      predicate: (query) => query.queryKey[0] === 'mapTemplates'
    });
    refetch(); // ‚úÖ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º infinite data
  }, [restoreMutation, queryClient, refetch]);

  // ‚úÖ –°–ï–†–í–ï–†–ù–ê–Ø –ü–ê–ì–ò–ù–ê–¶–ò–Ø: –î–∞–Ω–Ω—ã–µ —É–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Å–µ—Ä–≤–µ—Ä–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ–π —á–µ—Ä–µ–∑ URL

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ UI
  const handleCreateClick = () => {
    setSelectedTemplate(undefined);
    setFormErrors({}); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
    setIsDialogOpen(true);
  };

  const handleEditClick = (template: MapTemplate) => {
    setSelectedTemplate(template);
    setFormErrors({}); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
    setIsDialogOpen(true);
  };

  // ‚úÖ –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –≤—Å–µ—Ö –º—É—Ç–∞—Ü–∏–π
  const isMutating = createMutation.isPending || 
                   updateMutation.isPending || 
                   archiveMutation.isPending || 
                   restoreMutation.isPending;

  return (
    <div className="container mx-auto py-6">
      <div className="flex items-center justify-between mb-6">
        <div>
          <h1 className="text-3xl font-bold">–®–∞–±–ª–æ–Ω—ã –∫–∞—Ä—Ç</h1>
          <p className="text-muted-foreground mt-1">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞–º–∏ –∫–∞—Ä—Ç –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–æ–≤
          </p>
        </div>
      </div>

      {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div className="flex items-center justify-between gap-4 mb-6">
        {/* ‚úÖ –ò–ó–ú–ï–ù–ï–ù–ò–ï: –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è infinite scroll */}
        <div className="flex items-center gap-4">
          {/* –ü–æ–∏—Å–∫ */}
          <div className="relative">
            <input
              type="text"
              placeholder="–í–≤–µ–¥–∏—Ç–µ —à–∞–±–ª–æ–Ω–∞ –∫–∞—Ä—Ç—ã..."
              value={searchTerm}
              onChange={(e) => handleSearchChange(e.target.value)}
              className="pl-4 pr-4 py-2 border rounded-md w-80"
            />
          </div>
          
          {/* –§–∏–ª—å—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ */}
          {permissions.canViewArchived && (
            <select
              value={status}
              onChange={(e) => handleStatusChange(e.target.value as EntityStatus)}
              className="px-3 py-2 border rounded-md"
            >
              <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
              <option value="archived">–ê—Ä—Ö–∏–≤–Ω—ã–µ</option>
              <option value="all">–í—Å–µ</option>
            </select>
          )}

          {/* ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –ö–Ω–æ–ø–∫–∞ "–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ" */}
          {!shouldLoadData && (
            <Button 
              variant="outline"
              onClick={handleShowAll}
              disabled={isMutating}
            >
              –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ
            </Button>
          )}
        </div>
        
        {/* –ö–Ω–æ–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è */}
        <Button 
          onClick={handleCreateClick}
          disabled={isMutating}
        >
          <Plus className="mr-2 h-4 w-4" />
          –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω
        </Button>
      </div>

      {/* ‚úÖ INFINITE SCROLL –¢–ê–ë–õ–ò–¶–ê: –£–º–Ω–∞—è –≤–∏—Ä—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è + –∞–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ */}
      <MapTemplatesTable
        templates={templates}
        isLoading={isLoading}
        error={error}
        onEditAction={handleEditClick}
        searchTerm={searchTerm}
        onArchiveAction={handleArchiveAction}
        onRestoreAction={handleRestoreAction}
        // ‚úÖ Infinite scroll props
        hasNextPage={hasNextPage}
        isFetchingNextPage={isFetchingNextPage}
        loadMore={loadMore}
        totalCount={totalCount}
      />

      {/* ‚úÖ –î–û–ë–ê–í–õ–ï–ù–û: –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–≥–¥–∞ –¥–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã */}
      {!shouldFetchData && !isLoading && (
        <div className="rounded-md border border-dashed border-muted-foreground/25 p-12">
          <div className="text-center">
            <h3 className="text-lg font-medium text-muted-foreground mb-2">
              –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã
            </h3>
            <p className="text-sm text-muted-foreground/75 mb-4">
              –í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –≤ –ø–æ–∏—Å–∫–µ (–º–∏–Ω. 2 —Å–∏–º–≤–æ–ª–∞), –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ &quot;–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ&quot;
            </p>
            <Button 
              variant="outline"
              onClick={handleShowAll}
              disabled={isMutating}
            >
              –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —à–∞–±–ª–æ–Ω—ã
            </Button>
          </div>
        </div>
      )}

      {/* –î–∏–∞–ª–æ–≥ —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
      {isDialogOpen && (
        <MapTemplateDialog
          isOpen={isDialogOpen}
          onClose={() => setIsDialogOpen(false)}
          onSubmit={async (data) => {
            const action = selectedTemplate
              ? () => handleUpdateAction(selectedTemplate.id, data)
              : () => handleCreateAction(data);
            
            const result = await action();
            
            if (result.success) {
              setIsDialogOpen(false);
            }
          }}
          template={selectedTemplate}
          isPending={isMutating}
        />
      )}
    </div>
  );
} 