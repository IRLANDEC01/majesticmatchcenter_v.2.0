// scripts/run-search-worker.ts

import { connectToDatabase, disconnectFromDatabase } from '../src/lib/db';
import worker from '../src/queues/search-worker'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∞–º –≤–æ—Ä–∫–µ—Ä

console.log('[RunWorker] üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –≤–æ—Ä–∫–µ—Ä–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª.');

async function startWorker() {
  try {
    console.log('[RunWorker] üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await connectToDatabase();
    console.log('[RunWorker] ‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');
    console.log(
      '[RunWorker] ‚ú® –í–æ—Ä–∫–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞.'
    );

    // –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∂–∏–≤—ã–º
    const keepAlive = () => {};
    process.on('SIGINT', gracefulShutdown);
    process.on('SIGTERM', gracefulShutdown);
  } catch (error) {
    console.error('[RunWorker] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤–æ—Ä–∫–µ—Ä–∞:', error);
    await gracefulShutdown(1);
  }
}

async function gracefulShutdown(exitCode = 0) {
  console.log('\n[RunWorker] üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è. –ù–∞—á–∏–Ω–∞—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É...');
  try {
    // 1. –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤–æ—Ä–∫–µ—Ä. –û–Ω –¥–æ–∂–¥–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–¥–∞—á–∏.
    console.log('[RunWorker] ‚è≥ –ó–∞–∫—Ä—ã—Ç–∏–µ –≤–æ—Ä–∫–µ—Ä–∞ BullMQ...');
    await worker.close();
    console.log('[RunWorker] ‚úÖ –í–æ—Ä–∫–µ—Ä BullMQ —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');

    // 2. –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç –ë–î
    await disconnectFromDatabase();
    console.log('[RunWorker] ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.');
  } catch (error) {
    console.error(
      '[RunWorker] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã:',
      error
    );
  } finally {
    console.log('[RunWorker] üëã –ü—Ä–æ—Ü–µ—Å—Å –≤–æ—Ä–∫–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω.');
    process.exit(exitCode);
  }
}

startWorker(); 