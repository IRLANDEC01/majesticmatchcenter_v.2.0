// scripts/run-search-worker.ts

import { connectToDatabase, disconnectFromDatabase } from '../src/lib/db';
import '../src/queues/search-worker'; // –í–∞–∂–Ω–æ: –ø—Ä–æ—Å—Ç–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–¥ –≤–æ—Ä–∫–µ—Ä–∞

console.log('[RunWorker] üöÄ –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –≤–æ—Ä–∫–µ—Ä–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞–ª.');

async function startWorker() {
  try {
    console.log('[RunWorker] üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await connectToDatabase();
    console.log('[RunWorker] ‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');
    console.log(
      '[RunWorker] ‚ú® –í–æ—Ä–∫–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –æ—á–µ—Ä–µ–¥—å. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞.'
    );

    // –î–µ—Ä–∂–∏–º –ø—Ä–æ—Ü–µ—Å—Å –∂–∏–≤—ã–º
    const keepAlive = () => {};
    process.on('SIGINT', gracefulShutdown);
    process.on('SIGTERM', gracefulShutdown);
    setInterval(keepAlive, 1000 * 60 * 60); // –ü—Ä–æ—Å—Ç–æ —á—Ç–æ–±—ã –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
  } catch (error) {
    console.error('[RunWorker] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≤–æ—Ä–∫–µ—Ä–∞:', error);
    process.exit(1);
  }
}

async function gracefulShutdown() {
  console.log('\n[RunWorker] üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è. –ù–∞—á–∏–Ω–∞—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É...');
  try {
    await disconnectFromDatabase();
    console.log('[RunWorker] ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.');
  } catch (error) {
    console.error(
      '[RunWorker] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:',
      error
    );
  } finally {
    console.log('[RunWorker] üëã –ü—Ä–æ—Ü–µ—Å—Å –≤–æ—Ä–∫–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω.');
    process.exit(0);
  }
}

startWorker(); 