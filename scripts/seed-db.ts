import { connectToDatabase, disconnectFromDatabase } from '../src/lib/db';
import MapTemplate from '../src/models/map/MapTemplate';
import TournamentTemplate from '../src/models/tournament/TournamentTemplate';

const MAP_TEMPLATES = [
  { name: 'Dust 2', slug: 'dust-2', description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞.', mapTemplateImage: 'https://placehold.co/600x400/F4A261/E9C46A?text=Dust+2' },
  { name: 'Mirage', slug: 'mirage', description: '–ü–æ–ø—É–ª—è—Ä–Ω–∞—è –∫–∞—Ä—Ç–∞ –¥–ª—è —Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∏–≥—Ä.', mapTemplateImage: 'https://placehold.co/600x400/2A9D8F/E9C46A?text=Mirage' },
  { name: 'Inferno', slug: 'inferno', description: '–ö–∞—Ä—Ç–∞ —Å —É–∑–∫–∏–º–∏ –ø—Ä–æ—Ö–æ–¥–∞–º–∏ –≤ –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–º —Å–µ—Ç—Ç–∏–Ω–≥–µ.', mapTemplateImage: 'https://placehold.co/600x400/E76F51/E9C46A?text=Inferno' },
  { name: 'Nuke', slug: 'nuke', description: '–ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è –∫–∞—Ä—Ç–∞ –Ω–∞ –∞—Ç–æ–º–Ω–æ–π —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏–∏.', mapTemplateImage: 'https://placehold.co/600x400/264653/E9C46A?text=Nuke' },
  { name: 'Train', slug: 'train', description: '–ö–∞—Ä—Ç–∞ –Ω–∞ –∂–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω–æ–π —Å—Ç–∞–Ω—Ü–∏–∏.', mapTemplateImage: 'https://placehold.co/600x400/A8DADC/1D3557?text=Train' },
  { name: 'Cache', slug: 'cache', description: '–ö–∞—Ä—Ç–∞ –≤ –ß–µ—Ä–Ω–æ–±—ã–ª—å—Å–∫–æ–π –∑–æ–Ω–µ –æ—Ç—á—É–∂–¥–µ–Ω–∏—è.', mapTemplateImage: 'https://placehold.co/600x400/457B9D/F1FAEE?text=Cache' },
  { name: 'Overpass', slug: 'overpass', description: '–ö–∞—Ä—Ç–∞ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏ —Å –∫–∞–Ω–∞–ª–∞–º–∏ –∏ –ø–∞—Ä–∫–æ–º.', mapTemplateImage: 'https://placehold.co/600x400/6A994E/E9C46A?text=Overpass' },
  { name: 'Vertigo', slug: 'vertigo', description: '–ö–∞—Ä—Ç–∞ –Ω–∞ –Ω–µ–±–æ—Å–∫—Ä–µ–±–µ, —Ç—Ä–µ–±—É—é—â–∞—è –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è.', mapTemplateImage: 'https://placehold.co/600x400/A9A9A9/E9C46A?text=Vertigo' },
];

async function seedDatabase() {
  console.log('üå± –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...');
  try {
    await connectToDatabase();
    console.log('üîå –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.');

    // –û—á–∏—Å—Ç–∫–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π –ø–µ—Ä–µ–¥ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–µ–º
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    await MapTemplate.deleteMany({});
    await TournamentTemplate.deleteMany({}); // –¢–∞–∫–∂–µ —á–∏—Å—Ç–∏–º —à–∞–±–ª–æ–Ω—ã —Ç—É—Ä–Ω–∏—Ä–æ–≤ –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
    console.log('‚úÖ –°—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.');

    // –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –∫–∞—Ä—Ç
    console.log('üó∫Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –∫–∞—Ä—Ç...');
    const createdMapTemplates = await MapTemplate.insertMany(MAP_TEMPLATES);
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ ${createdMapTemplates.length} —à–∞–±–ª–æ–Ω–æ–≤ –∫–∞—Ä—Ç.`);

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ —Ç—É—Ä–Ω–∏—Ä–∞, –∏—Å–ø–æ–ª—å–∑—É—é—â–µ–≥–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –∫–∞—Ä—Ç
    console.log('üèÜ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ —Ç—É—Ä–Ω–∏—Ä–∞...');
    const tournamentTemplateData = {
      name: 'Majestic Major 2025',
      description: '–ì–ª–∞–≤–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä –≥–æ–¥–∞ —Å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º –Ω–∞–±–æ—Ä–æ–º –∫–∞—Ä—Ç.',
      rules: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ 5x5.',
      prizePool: [
        { type: 'rank', rank: 1, amount: 10000 },
        { type: 'rank', rank: 2, amount: 5000 },
        { type: 'rank', rank: 3, amount: 2500 },
      ],
      mapTemplates: [
        createdMapTemplates[0]._id, // Dust 2
        createdMapTemplates[1]._id, // Mirage
        createdMapTemplates[2]._id, // Inferno
      ],
    };
    await TournamentTemplate.create(tournamentTemplateData);
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω —Ç—É—Ä–Ω–∏—Ä–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.');

    console.log('üéâ –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
    process.exit(1);
  } finally {
    await disconnectFromDatabase();
    console.log('üîå –û—Ç–∫–ª—é—á–µ–Ω–æ –æ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.');
  }
}

// –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é, –∞ –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
if (require.main === module) {
  seedDatabase();
} 